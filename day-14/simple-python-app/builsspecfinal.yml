version: 0.2

env:
  parameter-store:
      DOCK_REG_UNAME: /myapp/dockercrid/uname      #AWS Systems Manager -> Parameter Store ->un    All are done same region where pipeline creating.
      DOCK_REG_PASS: /myapp/dockercrid/passwd      #AWS Systems Manager -> Parameter Store ->pass
      DOCK_REG_URL: /myapp/dockercrid/url          #AWS Systems Manager -> Parameter Store ->docker.io
phases:
  install:
    runtime-versions:
      python: 3.11
  pre_build:
    commands:
      - echo "Installing dependencies..."
      - pip install -r day-14/simple-python-app/requirements.txt
  build:
    commands:
      - echo "Running tests..."
      - cd day-14/simple-python-app/
      - echo "Building Docker image..."
      - echo "$DOCK_REG_PASS" | docker login -u "$DOCK_REG_UNAME" --password-stdin "$DOCK_REG_URL"
      - docker build -t "$DOCK_REG_URL/$DOCK_REG_UNAME/simple-python-flask-app:latest" .
      - docker login -u "$DOCK_REG_UNAME" -p "$DOCK_REG_PASS" "$DOCK_REG_URL"
      - docker push "$DOCK_REG_URL/$DOCK_REG_UNAME/simple-python-flask-app:latest"
  post_build:
    commands:
      - echo "Build completed successfully!"
artifacts:
  files:
    - '**/*'
  name: simple-python-app        #Buildname,Applicationname,pipelineprojectname,samename  all need to be same need to give project name, application name in build,deployee and also select in additional info in code build for S3
  discard-paths: no
